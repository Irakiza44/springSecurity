version: '3.9'

services:
  spring-security:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-security-app
    ports:
      - "8011:8005"
    environment:
      SPRING_APPLICATION_NAME: springSecurity
      SERVER_PORT: 8005
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/taskdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ""
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_OPEN_IN_VIEW: false
      SECURITY_JWT_SECRET_KEY: 3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b
      SECURITY_JWT_EXPIRATION_TIME: 3600000
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://host.docker.internal:8761/eureka/
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: 'true'
      EUREKA_CLIENT_FETCH_REGISTRY: 'true'
      SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_ENABLED: 'true'
      SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_LOWER_CASE_SERVICE_ID: 'true'
    depends_on:
      - kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2182:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9094:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "my-topic:1:1"
    depends_on:
      - zookeeper
